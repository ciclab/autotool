wire
12
XA 10
YA 10
RB 16
A 16
B 16
C 16
S 16
S_f 3
D 16
E 16
G 32
H 32

type
8
c_1 1 unsigned
c_3 3 unsigned
c_8 8 signed
c_10 10 unsigned
addr 10 unsigned
num 16 signed
fact 3 signed
acc 32 signed

stage
4
IF
ID
E1
E2

enum 13
alu 4
add + sub - and & or | 
as 2
add + sub - 
sh 2
shdown >> shup << 
macc 4
multAdd += multSub -= mult = rnd rnd 
alu_left 4
AX AX AR AR MR0 MR0 MR1 MR1 
alu_right 2
AY AY ONE ONE 
mult_left 4
MX MX AR AR MR0 MR0 MR1 MR1 
mult_right 2
MY MY ONE ONE 
sgl_reg 8
AX AX AY AY MX MX MY MY LR LR AR AR MR0 MR0 MR1 MR1 
dbl_reg 4
AX AX AY AY MX MX MY MY 
cond 8
EQ EQ NE NE GT GT GE GE LT LT LE LE OV OV TRUE TRUE 
dbl_addr_mode 2
incr 1 add M 
sgl_addr_mode 4
indirect 0 incr 1 add M sub -M 

memory
2
PM 1024 pm_type addr
DM 1024 num addr

instr
82
("AR=alu_leftalualu_right,sgl_reg=DM[Iatype_c_1_1_unsigned]"
"000----------001--------0-----"
6
11 3 3 9 14 7 37 25 32 26 24 16 
6
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr0
)
(
do subinstr ))
("AR=alu_leftalualu_right,sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"000----------001--------1-----"
6
11 3 3 9 14 7 37 25 32 26 24 16 
6
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr1
)
(
do subinstr ))
("AR=alu_leftalualu_right,DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"000----------001--------0-----"
6
11 3 3 9 14 7 29 25 24 26 50 16 
6
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr2
)
(
do subinstr ))
("AR=alu_leftalualu_right,DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"000----------001--------1-----"
6
11 3 3 9 14 7 29 25 24 26 50 16 
6
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr3
)
(
do subinstr ))
("AR=alu_leftalualu_right,DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"000----------01--------------"
9
11 3 3 9 14 7 29 19 24 20 71 26 66 27 50 15 58 22 
9
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr4
)
(
do subinstr ))
("AR=alu_leftalualu_right,DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"000----------10--------------"
9
11 3 3 9 14 7 63 19 58 20 123 26 118 27 50 15 84 22 
9
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr5
)
(
do subinstr ))
("AR=alu_leftalualu_right,nop"
"000----------11"
3
11 3 3 9 14 7 
3
subinstr#ar#subinstr#op#op#alu subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right 
(subinstr arith_mem_ind_instr6
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,sgl_reg=DM[Iatype_c_1_1_unsigned]"
"001----1------001--------0-----"
7
12 3 24 5 4 10 14 8 40 26 35 27 27 17 
7
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr7
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"001----1------001--------1-----"
7
12 3 24 5 4 10 14 8 40 26 35 27 27 17 
7
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr8
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"001----1------001--------0-----"
7
12 3 24 5 4 10 14 8 32 26 27 27 53 17 
7
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr9
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"001----1------001--------1-----"
7
12 3 24 5 4 10 14 8 32 26 27 27 53 17 
7
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr10
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"001----1------01--------------"
10
12 3 24 5 4 10 14 8 32 20 27 21 74 27 69 28 53 16 61 23 
10
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr11
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"001----1------10--------------"
10
12 3 24 5 4 10 14 8 66 20 61 21 126 27 121 28 53 16 87 23 
10
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr12
)
(
do subinstr ))
("AR=(alu_leftasalu_right)sh,nop"
"001----1------11"
4
12 3 24 5 4 10 14 8 
4
subinstr#ar#subinstr#as#op#as subinstr#ar#subinstr#sh#op#sh subinstr#ar#subinstr#al#sel#alu_left subinstr#ar#subinstr#ar#sel#alu_right 
(subinstr arith_mem_ind_instr13
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,sgl_reg=DM[Iatype_c_1_1_unsigned]"
"010-------001--------0-----"
5
4 6 14 3 47 22 42 23 34 13 
5
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr14
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"010-------001--------1-----"
5
4 6 14 3 47 22 42 23 34 13 
5
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr15
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"010-------001--------0-----"
5
4 6 14 3 39 22 34 23 60 13 
5
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr16
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"010-------001--------1-----"
5
4 6 14 3 39 22 34 23 60 13 
5
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr17
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"010-------01--------------"
8
4 6 14 3 39 16 34 17 81 23 76 24 60 12 68 19 
8
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr18
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"010-------10--------------"
8
4 6 14 3 73 16 68 17 133 23 128 24 60 12 94 19 
8
subinstr#ar#subinstr#al#sel#alu_left   subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr19
)
(
do subinstr ))
("AR =alu_left<<type_c_3_3_unsigned,nop"
"010-------11"
2
4 6 14 3 
2
subinstr#ar#subinstr#al#sel#alu_left  
(subinstr arith_mem_ind_instr20
)
(
do subinstr ))
("MRmaccmult_left*mult_right,sgl_reg=DM[Iatype_c_1_1_unsigned]"
"011----------001--------0-----"
6
2 3 6 9 16 7 40 25 35 26 27 16 
6
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr21
)
(
do subinstr ))
("MRmaccmult_left*mult_right,sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"011----------001--------1-----"
6
2 3 6 9 16 7 40 25 35 26 27 16 
6
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr22
)
(
do subinstr ))
("MRmaccmult_left*mult_right,DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"011----------001--------0-----"
6
2 3 6 9 16 7 32 25 27 26 53 16 
6
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr23
)
(
do subinstr ))
("MRmaccmult_left*mult_right,DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"011----------001--------1-----"
6
2 3 6 9 16 7 32 25 27 26 53 16 
6
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr24
)
(
do subinstr ))
("MRmaccmult_left*mult_right,DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"011----------01--------------"
9
2 3 6 9 16 7 32 19 27 20 74 26 69 27 53 15 61 22 
9
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr25
)
(
do subinstr ))
("MRmaccmult_left*mult_right,DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"011----------10--------------"
9
2 3 6 9 16 7 66 19 61 20 126 26 121 27 53 15 87 22 
9
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr26
)
(
do subinstr ))
("MRmaccmult_left*mult_right,nop"
"011----------11"
3
2 3 6 9 16 7 
3
subinstr#ar#subinstr#subinstr#op#macc subinstr#ar#subinstr#subinstr#ml#sel#mult_left subinstr#ar#subinstr#subinstr#mr#sel#mult_right 
(subinstr arith_mem_ind_instr27
)
(
do subinstr ))
("MR=macc(MR),sgl_reg=DM[Iatype_c_1_1_unsigned]"
"011----0xx001--------0-----"
4
3 3 25 22 20 23 12 13 
4
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr28
)
(
do subinstr ))
("MR=macc(MR),sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"011----0xx001--------1-----"
4
3 3 25 22 20 23 12 13 
4
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr29
)
(
do subinstr ))
("MR=macc(MR),DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"011----0xx001--------0-----"
4
3 3 17 22 12 23 38 13 
4
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr30
)
(
do subinstr ))
("MR=macc(MR),DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"011----0xx001--------1-----"
4
3 3 17 22 12 23 38 13 
4
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr31
)
(
do subinstr ))
("MR=macc(MR),DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"011----0xx01--------------"
7
3 3 17 16 12 17 59 23 54 24 38 12 46 19 
7
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr32
)
(
do subinstr ))
("MR=macc(MR),DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"011----0xx10--------------"
7
3 3 51 16 46 17 111 23 106 24 38 12 72 19 
7
subinstr#ar#subinstr#subinstr#op#macc  subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr33
)
(
do subinstr ))
("MR=macc(MR),nop"
"011----0xx11"
1
3 3 
1
subinstr#ar#subinstr#subinstr#op#macc 
(subinstr arith_mem_ind_instr34
)
(
do subinstr ))
("nop,sgl_reg=DM[Iatype_c_1_1_unsigned]"
"011111xx001--------0-----"
3
17 20 12 21 4 11 
3
 subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr35
)
(
do subinstr ))
("nop,sgl_reg=DM[Ibtype_c_1_1_unsigned]"
"011111xx001--------1-----"
3
17 20 12 21 4 11 
3
 subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr36
)
(
do subinstr ))
("nop,DM[Iatype_c_1_1_unsigned]=sgl_reg,"
"011111xx001--------0-----"
3
9 20 4 21 30 11 
3
 subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr37
)
(
do subinstr ))
("nop,DM[Ibtype_c_1_1_unsigned]=sgl_reg,"
"011111xx001--------1-----"
3
9 20 4 21 30 11 
3
 subinstr#mi#subinstr#m#subinstr#m#sgl_addr_mode subinstr#mi#subinstr#r#sel#sgl_reg 
(subinstr arith_mem_ind_instr38
)
(
do subinstr ))
("nop,DM[Iatype_c_1_1_unsigned]=dbl_reg,dbl_reg=DM[Ibtype_c_1_1_unsigned]"
"011111xx01--------------"
6
9 14 4 15 51 21 46 22 30 10 38 17 
6
 subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr39
)
(
do subinstr ))
("nop,DM[Iatype_c_1_1_unsigned]=dbl_reg,DM[Iatype_c_1_1_unsigned],dbl_reg=DM[Ibtype_c_1_1_unsigned],DM[Ibtype_c_1_1_unsigned]"
"011111xx10--------------"
6
43 14 38 15 103 21 98 22 30 10 64 17 
6
 subinstr#mi#subinstr#m1#m#dbl_addr_mode  subinstr#mi#subinstr#m2#m#dbl_addr_mode subinstr#mi#subinstr#r1#sel#dbl_reg subinstr#mi#subinstr#r2#sel#dbl_reg 
(subinstr arith_mem_ind_instr40
)
(
do subinstr ))
("nop,nop"
"011111xx11"
0

0

(subinstr arith_mem_ind_instr41
)
(
do subinstr ))
("sgl_reg=DM[type_c_10_10_unsigned]"
"10000------------------"
2
0 5 11 13 
2
subinstr#subinstr#r#sel#sgl_reg  
(subinstr mem_dir_instr0
)
(
do subinstr ))
("DM[type_c_10_10_unsigned]=sgl_reg"
"10001------------------"
2
26 5 3 13 
2
subinstr#subinstr#r#sel#sgl_reg  
(subinstr mem_dir_instr1
)
(
do subinstr ))
("sgl_reg=DM[SP+type_c_10_10_unsigned]"
"10010------------------"
2
0 5 14 13 
2
subinstr#r#sel#sgl_reg  
(subinstr mem_sp_idx_imm_instr0
)
(
do subinstr ))
("=type_c_10_10_unsigned"
"1010000----------"
2
0 7 1 7 
2
  
(subinstr imm_load_addr_instr0
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned=type_c_10_10_unsigned"
"1010001-----------"
2
2 7 22 8 
2
  
(subinstr imm_load_addr_instr1
)
(
do subinstr ))
("Matype_c_1_1_unsigned=type_c_10_10_unsigned"
"1010010-----------"
2
2 7 22 8 
2
  
(subinstr imm_load_addr_instr2
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned=type_c_10_10_unsigned"
"1010011-----------"
2
2 7 22 8 
2
  
(subinstr imm_load_addr_instr3
)
(
do subinstr ))
("dbl_reg=type_c_8_8_signed"
"10101----0x--------"
2
0 5 8 11 
2
subinstr#subinstr#r#sel#dbl_reg  
(subinstr imm_load_data_instr0
)
(
do subinstr ))
("dbl_reg.hightype_c_8_8_signed"
"10101----1x--------"
2
0 5 12 11 
2
subinstr#subinstr#r#sel#dbl_reg  
(subinstr imm_load_data_instr1
)
(
do subinstr ))
("Iatype_c_1_1_unsigned=SP+type_c_10_10_unsigned"
"101101-----------"
2
2 6 25 7 
2
  
(subinstr ptr_init_sp_instr0
)
(
do subinstr ))
("sgl_reg=sgl_reg"
"10111000--------0--------"
2
8 8 0 17 
2
subinstr#rs#subinstr#sel#sgl_reg subinstr#rd#subinstr#sel#sgl_reg 
(subinstr rmove_instr0
)
(
do subinstr ))
("=sgl_reg"
"10111000--------100"
2
1 8 0 19 
2
subinstr#rs#subinstr#sel#sgl_reg  
(subinstr rmove_instr1
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned=sgl_reg"
"10111000--------101-"
2
22 8 2 19 
2
subinstr#rs#subinstr#sel#sgl_reg  
(subinstr rmove_instr2
)
(
do subinstr ))
("Matype_c_1_1_unsigned=sgl_reg"
"10111000--------110-"
2
22 8 2 19 
2
subinstr#rs#subinstr#sel#sgl_reg  
(subinstr rmove_instr3
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned=sgl_reg"
"10111000--------111-"
2
22 8 2 19 
2
subinstr#rs#subinstr#sel#sgl_reg  
(subinstr rmove_instr4
)
(
do subinstr ))
("sgl_reg="
"10111001000--------"
2
8 10 0 11 
2
 subinstr#rd#subinstr#sel#sgl_reg 
(subinstr rmove_instr5
)
(
do subinstr ))
("="
"1011100100100"
2
1 10 0 13 
2
  
(subinstr rmove_instr6
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned="
"1011100100101-"
2
22 10 2 13 
2
  
(subinstr rmove_instr7
)
(
do subinstr ))
("Matype_c_1_1_unsigned="
"1011100100110-"
2
22 10 2 13 
2
  
(subinstr rmove_instr8
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned="
"1011100100111-"
2
22 10 2 13 
2
  
(subinstr rmove_instr9
)
(
do subinstr ))
("sgl_reg=Ibtype_c_1_1_unsigned"
"1011100101-0--------"
2
10 10 0 12 
2
 subinstr#rd#subinstr#sel#sgl_reg 
(subinstr rmove_instr10
)
(
do subinstr ))
("=Ibtype_c_1_1_unsigned"
"1011100101-100"
2
3 10 0 14 
2
  
(subinstr rmove_instr11
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned=Ibtype_c_1_1_unsigned"
"1011100101-101-"
2
24 10 2 14 
2
  
(subinstr rmove_instr12
)
(
do subinstr ))
("Matype_c_1_1_unsigned=Ibtype_c_1_1_unsigned"
"1011100101-110-"
2
24 10 2 14 
2
  
(subinstr rmove_instr13
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned=Ibtype_c_1_1_unsigned"
"1011100101-111-"
2
24 10 2 14 
2
  
(subinstr rmove_instr14
)
(
do subinstr ))
("sgl_reg=Matype_c_1_1_unsigned"
"1011100110-0--------"
2
10 10 0 12 
2
 subinstr#rd#subinstr#sel#sgl_reg 
(subinstr rmove_instr15
)
(
do subinstr ))
("=Matype_c_1_1_unsigned"
"1011100110-100"
2
3 10 0 14 
2
  
(subinstr rmove_instr16
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned=Matype_c_1_1_unsigned"
"1011100110-101-"
2
24 10 2 14 
2
  
(subinstr rmove_instr17
)
(
do subinstr ))
("Matype_c_1_1_unsigned=Matype_c_1_1_unsigned"
"1011100110-110-"
2
24 10 2 14 
2
  
(subinstr rmove_instr18
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned=Matype_c_1_1_unsigned"
"1011100110-111-"
2
24 10 2 14 
2
  
(subinstr rmove_instr19
)
(
do subinstr ))
("sgl_reg=Mbtype_c_1_1_unsigned"
"1011100111-0--------"
2
10 10 0 12 
2
 subinstr#rd#subinstr#sel#sgl_reg 
(subinstr rmove_instr20
)
(
do subinstr ))
("=Mbtype_c_1_1_unsigned"
"1011100111-100"
2
3 10 0 14 
2
  
(subinstr rmove_instr21
)
(
do subinstr ))
("Ibtype_c_1_1_unsigned=Mbtype_c_1_1_unsigned"
"1011100111-101-"
2
24 10 2 14 
2
  
(subinstr rmove_instr22
)
(
do subinstr ))
("Matype_c_1_1_unsigned=Mbtype_c_1_1_unsigned"
"1011100111-110-"
2
24 10 2 14 
2
  
(subinstr rmove_instr23
)
(
do subinstr ))
("Mbtype_c_1_1_unsigned=Mbtype_c_1_1_unsigned"
"1011100111-111-"
2
24 10 2 14 
2
  
(subinstr rmove_instr24
)
(
do subinstr ))
("DOdbl_regend"
"1011101---------------"
2
2 8 0 12 
2
subinstr#r#sel#dbl_reg  
(subinstr doloop_instr0
)
(
do subinstr ))
("IFcondJUMPTOtype_c_10_10_unsigned"
"1011111-------------------"
2
12 16 2 8 
2
 subinstr#subinstr#c#cond 
(subinstr branch_instr0
)
(
do subinstr ))
("JUMPTOtype_c_10_10_unsigned"
"1011111-------------------"
2
6 16 0 8 
2
 subinstr#subinstr#c#cond 
(subinstr branch_instr1
)
(
do subinstr ))
("JSRtype_c_10_10_unsigned"
"10111110------------"
1
3 10 
1
 
(subinstr jsr_instr0
)
(
do subinstr ))
("RTS"
"10111111----------"
0

0

(subinstr return_instr0
)
(
do subinstr ))

